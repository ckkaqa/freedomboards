{% extends 'base.html.twig' %}

{% block body %}
	{% trans_default_domain 'FOSUserBundle' %}

	{{ form_start(form, {'method': 'post', 'action': path('fos_user_registration_register'), 'attr': {'class': 'fos_user_registration_register'}}) }}
	    
		<section class="vh-100" style="background-color: #eee;">
		  <div class="container h-100">
		    <div class="row d-flex justify-content-center align-items-center h-100">
		      <div class="col-lg-12 col-xl-11">
		        <div class="card text-black" style="border-radius: 25px;">
		          <div class="card-body p-md-5">
		            <div class="row justify-content-center">
		              <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

		                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>

		                <form class="mx-1 mx-md-4">

		                  <div class="d-flex flex-row align-items-center mb-4">
		                    <i class="fas fa-user fa-lg me-3 fa-fw"></i>
		                    <div class="form-outline flex-fill mb-0">
		                    	{{ form_widget(form.username, {attr: {class: "form-control"}}) }}
		                    	{{ form_label(form.username) }}
		                    	{{ form_errors(form.username) }}
		                    </div>
		                  </div>

		                  <div class="d-flex flex-row align-items-center mb-4">
		                    <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
		                    <div class="form-outline flex-fill mb-0">
		                    	{{ form_widget(form.email, {attr: {class: "form-control"}}) }}
		                    	{{ form_label(form.email) }}
		                    	{{ form_errors(form.email) }}
		                    </div>
		                  </div>

		                  <div class="d-flex flex-row align-items-center mb-4">
		                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
		                    <div class="form-outline flex-fill mb-0">
		                    	{{ form_widget(form.plainPassword.first, {attr: {class: "form-control"}}) }}
		                    	{{ form_label(form.plainPassword.first) }}
		                    	{{ form_errors(form.plainPassword.first) }}
		                    </div>
		                  </div>

		                  <div class="d-flex flex-row align-items-center mb-4">
		                    <i class="fas fa-key fa-lg me-3 fa-fw"></i>
		                    <div class="form-outline flex-fill mb-0">
		                    	{{ form_widget(form.plainPassword.second, {attr: {class: "form-control"}}) }}
		                    	{{ form_label(form.plainPassword.second) }}
		                    	{{ form_errors(form.plainPassword.second) }}
		                    </div>
		                  </div>


		                  <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
		                  	{{ form_rest(form) }}
		                  	<input type="submit" value="{{ 'registration.submit'|trans }}" class = "btn btn-primary btn-lg movable-button"/>
		                    {# <button type="button" class="">Register</button> #}
		                  </div>

		                </form>

		              </div>
		              <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

		                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
		                  class="img-fluid" alt="Sample image">

		              </div>
		            </div>
		          </div>
		        </div>
		      </div>
		    </div>
		  </div>
		</section>


	{{ form_end(form) }}
{% endblock body %}

{% block javascripts %}
<script>
	$(document).ready(function() {
	  $(window).keydown(function(event){
	    if(event.keyCode == 13) {
	      event.preventDefault();
	      return false;
	    }
	  });

	  var lastPick = 0;

	  $("body .movable-button").on('click', function(e){
	  	e.preventDefault();

	  	moveSubmit($(this));
	  });

	  $( "body .movable-button" ).mouseover(function() {
	  	

	  	moveSubmit($(this));
	  
		  
		});

	  function moveSubmit(buttonElem) {
	  	var currentMarginLeft = buttonElem.css('margin-left');
	  	var randomSlot = generateRandomNumber(-2,2);

	  	var newMargin = 1*200;

	  	var slots = [-800, -400, 0, 400];


	  	var margin = slots[generateRandomNumber(0, 2)];
	  	if(margin == currentMarginLeft) {
	  		buttonElem.css('margin-left', (margin+400)+'px');
	  	} else {
	  		buttonElem.css('margin-left', margin+'px');
	  	}
	  }

	  	function generateRandomNumber(min, max) {
		    return Math.floor(Math.random() * (max - min + 1) + min);
		}

	});
</script>
{% endblock %}
